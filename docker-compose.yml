version: '3.8'

services:
  web:
    build: .
    command: >
      sh -c "
        echo 'Waiting for postgres...' &&
        while ! nc -z db 5432; do
          sleep 1
        done &&
        echo 'PostgreSQL started' &&
        python manage.py migrate &&
        python manage.py collectstatic --noinput &&
        python manage.py runserver 0.0.0.0:8000
      "
    volumes:
      - .:/app
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    ports:
      - "8000:8000"
    environment:
      - DJANGO_SETTINGS_MODULE=testroad.settings.development
      - DJANGO_SECRET_KEY=django-insecure-dev-key-for-development-only
      - DJANGO_DEBUG=True
      - POSTGRES_DB=testroad
      - POSTGRES_USER=testroad_user
      - POSTGRES_PASSWORD=testroad_password
      - POSTGRES_HOST=db
    depends_on:
      db:
        condition: service_healthy

  db:
    image: postgres:15
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=testroad
      - POSTGRES_USER=testroad_user
      - POSTGRES_PASSWORD=testroad_password
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U testroad_user -d testroad"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: always

volumes:
  postgres_data:
  static_volume:
  media_volume:
